(defstruct blog title author since license) 
(defvar blog (make-blog :title "(peek-char t *sexp-life*)"
                            :author "biofermin2"
                            :since "2022"
                            :license "Â©biofermin2"))
(defstruct menu first lisp agri others) 
(defvar menu1 (make-menu)) 
(defstruct article title date text link)
(defvar a1 (make-article :title "first"
                             :link "./first.html"))
(setf (menu-first menu1) a1)  
(defvar a2 (make-article :title "lisp"
                         :link "./lisp-menu.lisp.html"))
(defvar menu-lisp (make-menu))
(setf (menu-lisp menu1) a2)
(defvar a3 (make-article :title "agriculture"
                         :link "./agri-menu.lisp.html"))
(defvar menu-agri (make-menu))
(setf (menu-agri menu1) a3)
(defvar a4 (make-article :title "others"
                         :link "./others-menu.lisp.html"))
(defvar menu-others (make-menu))
(setf (menu-others menu1) a4)
(format t "(:menu ~{[[~a][~a]]~^ ~})"
        (list (article-link a1) (article-title a1)
              (article-link a2) (article-title a2)
              (article-link a3) (article-title a3)
              (article-link a4) (article-title a4))) ; =>

(dotimes (x 4)
  (let ((article
          (read-from-string (concatenate 'string "a" (write-to-string (+ x 1))))))
    (format t "~a~%" (article-link article)))) ; => 
(article-link a1)                       ; => "./first.html"

(:menu [[./first.html][first]] [[./lisp-menu.lisp.html][lisp]] [[./agri-menu.lisp.html][agriculture]] [[./others-menu.lisp.html][others]])NIL 
